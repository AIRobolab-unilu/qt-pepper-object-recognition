<?xml version="1.0" encoding="utf-8"?>

<launch>
  <!-- Console launch prefix -->
  <arg name="launch_prefix" default=""/>

  <!-- Config and weights folder. -->
  <arg name="yolo_weights_path"          default="$(find darknet_ros)/yolo_network_config/weights"/>
  <arg name="yolo_config_path"           default="$(find darknet_ros)/yolo_network_config/cfg"/>
  <arg name="yolo_model_name"           default="yolov2-tiny"/>
  <arg name="input_camera_topic"           default="/cv_camera/image_raw"/>

  <!-- Load parameters -->
  <rosparam command="load" ns="darknet_ros" file="$(find darknet_ros)/config/ros.yaml"/>
  <rosparam command="load" ns="darknet_ros" file="$(find darknet_ros)/config/$(arg yolo_model_name).yaml"/>

  <!-- Start darknet and ros wrapper -->
  <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros" output="screen" launch-prefix="$(arg launch_prefix)">
    <param name="weights_path"          value="$(arg yolo_weights_path)" />
    <param name="config_path"           value="$(arg yolo_config_path)" />
    <param name="yolo_model_name"           value="$(arg yolo_model_name)" />
  </node>
  
 <node name="republish" type="republish" pkg="image_transport" output="screen" 	args="compressed in:=$(arg input_camera_topic) raw out:=/camera/image_raw" />
 
  <!-- launch video stream -->
  <include file="$(find video_stream_opencv)/launch/camera.launch" >
    <!-- node name and ros graph name -->
    <arg name="camera_name" value="cv_camera" />
    <!-- url of the video stream -->
    <arg name="video_stream_provider" value="/media/ibrahim/BACK UP/video dataset/eating_meal/a002-0421C.mp4" />
    <!-- set camera fps to -->
    <arg name="set_camera_fps" value="5"/>
      <!-- set buffer queue size of frame capturing to -->
      <arg name="buffer_queue_size" value="10" />
    <!-- throttling the querying of frames to -->
    <arg name="fps" value="5" />
    <!-- setting frame_id -->
    <arg name="frame_id" value="rtsp" />
    <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:-->
    <arg name="camera_info_url" value="file:///$(find video_stream_opencv)/config/test_calibration.yaml"/>
    <!-- visualize on an image_view window the stream generated -->
    <arg name="visualize" value="true" />
  </include>
</launch>
